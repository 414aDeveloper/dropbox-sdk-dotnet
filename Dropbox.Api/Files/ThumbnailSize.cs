// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>The thumbnail size object</para>
    /// </summary>
    public class ThumbnailSize : enc.IEncodable<ThumbnailSize>
    {
        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ThumbnailSize" /> class.</para>
        /// </summary>
        public ThumbnailSize()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W32h32</para>
        /// </summary>
        public bool IsW32h32
        {
            get
            {
                return this is W32h32;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W32h32, or <c>null</c>.</para>
        /// </summary>
        public W32h32 AsW32h32
        {
            get
            {
                return this as W32h32;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W64h64</para>
        /// </summary>
        public bool IsW64h64
        {
            get
            {
                return this is W64h64;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W64h64, or <c>null</c>.</para>
        /// </summary>
        public W64h64 AsW64h64
        {
            get
            {
                return this as W64h64;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W128h128</para>
        /// </summary>
        public bool IsW128h128
        {
            get
            {
                return this is W128h128;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W128h128, or <c>null</c>.</para>
        /// </summary>
        public W128h128 AsW128h128
        {
            get
            {
                return this as W128h128;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W640h480</para>
        /// </summary>
        public bool IsW640h480
        {
            get
            {
                return this is W640h480;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W640h480, or <c>null</c>.</para>
        /// </summary>
        public W640h480 AsW640h480
        {
            get
            {
                return this as W640h480;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is W1024h768</para>
        /// </summary>
        public bool IsW1024h768
        {
            get
            {
                return this is W1024h768;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a W1024h768, or <c>null</c>.</para>
        /// </summary>
        public W1024h768 AsW1024h768
        {
            get
            {
                return this as W1024h768;
            }
        }

        #region IEncodable<ThumbnailSize> methods

        /// <summary>
        /// <para>Encodes the object using the supplied encoder.</para>
        /// </summary>
        /// <param name="encoder">The encoder being used to serialize the object.</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        void enc.IEncodable<ThumbnailSize>.Encode(enc.IEncoder encoder)
        {
            if (this.IsW32h32)
            {
                ((enc.IEncodable<W32h32>)this).Encode(encoder);
            }
            else if (this.IsW64h64)
            {
                ((enc.IEncodable<W64h64>)this).Encode(encoder);
            }
            else if (this.IsW128h128)
            {
                ((enc.IEncodable<W128h128>)this).Encode(encoder);
            }
            else if (this.IsW640h480)
            {
                ((enc.IEncodable<W640h480>)this).Encode(encoder);
            }
            else if (this.IsW1024h768)
            {
                ((enc.IEncodable<W1024h768>)this).Encode(encoder);
            }
            else
            {
                throw new sys.InvalidOperationException();
            }
        }

        /// <summary>
        /// <para>Decodes on object using the supplied decoder.</para>
        /// </summary>
        /// <param name="decoder">The decoder used to deserialize the object.</param>
        /// <returns>The deserialized object. Note: this is not necessarily the current
        /// instance.</returns>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        ThumbnailSize enc.IEncodable<ThumbnailSize>.Decode(enc.IDecoder decoder)
        {
            switch (decoder.GetUnionName())
            {
            case "w32h32":
                return W32h32.Instance;
            case "w64h64":
                return W64h64.Instance;
            case "w128h128":
                return W128h128.Instance;
            case "w640h480":
                return W640h480.Instance;
            case "w1024h768":
                return W1024h768.Instance;
            default:
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        /// <summary>
        /// <para>32 by 32 px.</para>
        /// </summary>
        public sealed class W32h32 : ThumbnailSize, enc.IEncodable<W32h32>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W32h32" /> class.</para>
            /// </summary>
            private W32h32()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W32h32</para>
            /// </summary>
            public static readonly W32h32 Instance = new W32h32();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<W32h32>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField(".tag", "w32h32");
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            W32h32 enc.IEncodable<W32h32>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>64 by 64 px.</para>
        /// </summary>
        public sealed class W64h64 : ThumbnailSize, enc.IEncodable<W64h64>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W64h64" /> class.</para>
            /// </summary>
            private W64h64()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W64h64</para>
            /// </summary>
            public static readonly W64h64 Instance = new W64h64();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<W64h64>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField(".tag", "w64h64");
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            W64h64 enc.IEncodable<W64h64>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>128 by 128 px.</para>
        /// </summary>
        public sealed class W128h128 : ThumbnailSize, enc.IEncodable<W128h128>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W128h128" /> class.</para>
            /// </summary>
            private W128h128()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W128h128</para>
            /// </summary>
            public static readonly W128h128 Instance = new W128h128();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<W128h128>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField(".tag", "w128h128");
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            W128h128 enc.IEncodable<W128h128>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>640 by 480 px.</para>
        /// </summary>
        public sealed class W640h480 : ThumbnailSize, enc.IEncodable<W640h480>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W640h480" /> class.</para>
            /// </summary>
            private W640h480()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W640h480</para>
            /// </summary>
            public static readonly W640h480 Instance = new W640h480();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<W640h480>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField(".tag", "w640h480");
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            W640h480 enc.IEncodable<W640h480>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>1024 by 768</para>
        /// </summary>
        public sealed class W1024h768 : ThumbnailSize, enc.IEncodable<W1024h768>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="W1024h768" /> class.</para>
            /// </summary>
            private W1024h768()
            {
            }

            /// <summary>
            /// <para>A singleton instance of W1024h768</para>
            /// </summary>
            public static readonly W1024h768 Instance = new W1024h768();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<W1024h768>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField(".tag", "w1024h768");
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            W1024h768 enc.IEncodable<W1024h768>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }
    }
}
