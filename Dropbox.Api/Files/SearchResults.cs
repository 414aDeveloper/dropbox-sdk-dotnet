// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>Information returned by <see
    /// cref="Dropbox.Api.Files.Routes.FilesRoutes.SearchAsync" />.</para>
    /// </summary>
    public sealed class SearchResults : enc.IEncodable<SearchResults>
    {
        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SearchResults" /> class.</para>
        /// </summary>
        /// <param name="matches">A list (possibly empty) of matches for the query.</param>
        /// <param name="more">Used for paging. If true, indicates there is another page of
        /// results available that can be fetched by calling <see
        /// cref="Dropbox.Api.Files.Routes.FilesRoutes.SearchAsync" /> again.</param>
        /// <param name="start">Used for paging. Value to set the start argument to when
        /// calling <see cref="Dropbox.Api.Files.Routes.FilesRoutes.SearchAsync" /> to fetch
        /// the next page of results.</param>
        public SearchResults(col.IEnumerable<SearchMatch> matches,
                             bool more,
                             ulong start)
        {
            var matchesList = new col.List<SearchMatch>(matches ?? new SearchMatch[0]);

            if (matches == null)
            {
                throw new sys.ArgumentNullException("matches");
            }

            this.Matches = matchesList;
            this.More = more;
            this.Start = start;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SearchResults" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public SearchResults()
        {
        }

        /// <summary>
        /// <para>A list (possibly empty) of matches for the query.</para>
        /// </summary>
        public col.IList<SearchMatch> Matches { get; private set; }

        /// <summary>
        /// <para>Used for paging. If true, indicates there is another page of results
        /// available that can be fetched by calling <see
        /// cref="Dropbox.Api.Files.Routes.FilesRoutes.SearchAsync" /> again.</para>
        /// </summary>
        public bool More { get; private set; }

        /// <summary>
        /// <para>Used for paging. Value to set the start argument to when calling <see
        /// cref="Dropbox.Api.Files.Routes.FilesRoutes.SearchAsync" /> to fetch the next page
        /// of results.</para>
        /// </summary>
        public ulong Start { get; private set; }

        #region IEncodable<SearchResults> methods

        /// <summary>
        /// <para>Encodes the object using the supplied encoder.</para>
        /// </summary>
        /// <param name="encoder">The encoder being used to serialize the object.</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        void enc.IEncodable<SearchResults>.Encode(enc.IEncoder encoder)
        {
            using (var obj = encoder.AddObject())
            {
                obj.AddFieldObjectList<SearchMatch>("matches", this.Matches);
                obj.AddField<bool>("more", this.More);
                obj.AddField<ulong>("start", this.Start);
            }
        }

        /// <summary>
        /// <para>Decodes on object using the supplied decoder.</para>
        /// </summary>
        /// <param name="decoder">The decoder used to deserialize the object.</param>
        /// <returns>The deserialized object. Note: this is not necessarily the current
        /// instance.</returns>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        SearchResults enc.IEncodable<SearchResults>.Decode(enc.IDecoder decoder)
        {
            using (var obj = decoder.GetObject())
            {
                this.Matches = new col.List<SearchMatch>(obj.GetFieldObjectList<SearchMatch>("matches"));
                this.More = obj.GetField<bool>("more");
                this.Start = obj.GetField<ulong>("start");
            }

            return this;
        }

        #endregion
    }
}
