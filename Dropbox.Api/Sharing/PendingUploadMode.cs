// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>Flag to indicate pending upload default (for linking to not-yet-existing
    /// paths).</para>
    /// </summary>
    public class PendingUploadMode : enc.IEncodable<PendingUploadMode>
    {
        /// <summary>
        /// <para>Initializes a new instance of the <see cref="PendingUploadMode" />
        /// class.</para>
        /// </summary>
        public PendingUploadMode()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is File</para>
        /// </summary>
        public bool IsFile
        {
            get
            {
                return this is File;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a File, or <c>null</c>.</para>
        /// </summary>
        public File AsFile
        {
            get
            {
                return this as File;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Folder</para>
        /// </summary>
        public bool IsFolder
        {
            get
            {
                return this is Folder;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Folder, or <c>null</c>.</para>
        /// </summary>
        public Folder AsFolder
        {
            get
            {
                return this as Folder;
            }
        }

        #region IEncodable<PendingUploadMode> methods

        /// <summary>
        /// <para>Encodes the object using the supplied encoder.</para>
        /// </summary>
        /// <param name="encoder">The encoder being used to serialize the object.</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        void enc.IEncodable<PendingUploadMode>.Encode(enc.IEncoder encoder)
        {
            if (this.IsFile)
            {
                ((enc.IEncodable<File>)this).Encode(encoder);
            }
            else if (this.IsFolder)
            {
                ((enc.IEncodable<Folder>)this).Encode(encoder);
            }
            else
            {
                throw new sys.InvalidOperationException();
            }
        }

        /// <summary>
        /// <para>Decodes on object using the supplied decoder.</para>
        /// </summary>
        /// <param name="decoder">The decoder used to deserialize the object.</param>
        /// <returns>The deserialized object. Note: this is not necessarily the current
        /// instance.</returns>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        PendingUploadMode enc.IEncodable<PendingUploadMode>.Decode(enc.IDecoder decoder)
        {
            switch (decoder.GetUnionName())
            {
            case "file":
                return File.Instance;
            case "folder":
                return Folder.Instance;
            default:
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        /// <summary>
        /// <para>Assume pending uploads are files.</para>
        /// </summary>
        public sealed class File : PendingUploadMode, enc.IEncodable<File>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="File" /> class.</para>
            /// </summary>
            private File()
            {
            }

            /// <summary>
            /// <para>A singleton instance of File</para>
            /// </summary>
            public static readonly File Instance = new File();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<File>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField(".tag", "file");
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            File enc.IEncodable<File>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>Assume pending uploads are folders.</para>
        /// </summary>
        public sealed class Folder : PendingUploadMode, enc.IEncodable<Folder>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Folder" /> class.</para>
            /// </summary>
            private Folder()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Folder</para>
            /// </summary>
            public static readonly Folder Instance = new Folder();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<Folder>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField(".tag", "folder");
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            Folder enc.IEncodable<Folder>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }
    }
}
