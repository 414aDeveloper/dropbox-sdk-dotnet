// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>The list folder longpoll result object</para>
    /// </summary>
    public sealed class ListFolderLongpollResult : enc.IEncodable<ListFolderLongpollResult>
    {
        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ListFolderLongpollResult" />
        /// class.</para>
        /// </summary>
        /// <param name="changes">Indicates whether new changes are available. If true, call
        /// <see cref="Dropbox.Api.Files.Routes.FilesRoutes.ListFolderAsync" /> to retrieve the
        /// changes.</param>
        /// <param name="backoff">If present, backoff for at least this many seconds before
        /// calling <see cref="Dropbox.Api.Files.Routes.FilesRoutes.ListFolderLongpollAsync" />
        /// again.</param>
        public ListFolderLongpollResult(bool changes,
                                        ulong? backoff = null)
        {
            this.Changes = changes;
            this.Backoff = backoff;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ListFolderLongpollResult" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public ListFolderLongpollResult()
        {
        }

        /// <summary>
        /// <para>Indicates whether new changes are available. If true, call <see
        /// cref="Dropbox.Api.Files.Routes.FilesRoutes.ListFolderAsync" /> to retrieve the
        /// changes.</para>
        /// </summary>
        public bool Changes { get; private set; }

        /// <summary>
        /// <para>If present, backoff for at least this many seconds before calling <see
        /// cref="Dropbox.Api.Files.Routes.FilesRoutes.ListFolderLongpollAsync" />
        /// again.</para>
        /// </summary>
        public ulong? Backoff { get; private set; }

        #region IEncodable<ListFolderLongpollResult> methods

        /// <summary>
        /// <para>Encodes the object using the supplied encoder.</para>
        /// </summary>
        /// <param name="encoder">The encoder being used to serialize the object.</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        void enc.IEncodable<ListFolderLongpollResult>.Encode(enc.IEncoder encoder)
        {
            using (var obj = encoder.AddObject())
            {
                obj.AddField<bool>("changes", this.Changes);
                if (this.Backoff != null)
                {
                    obj.AddField<ulong>("backoff", this.Backoff.Value);
                }
            }
        }

        /// <summary>
        /// <para>Decodes on object using the supplied decoder.</para>
        /// </summary>
        /// <param name="decoder">The decoder used to deserialize the object.</param>
        /// <returns>The deserialized object. Note: this is not necessarily the current
        /// instance.</returns>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        ListFolderLongpollResult enc.IEncodable<ListFolderLongpollResult>.Decode(enc.IDecoder decoder)
        {
            using (var obj = decoder.GetObject())
            {
                this.Changes = obj.GetField<bool>("changes");
                if (obj.HasField("backoff"))
                {
                    this.Backoff = obj.GetField<ulong>("backoff");
                }
            }

            return this;
        }

        #endregion
    }
}
