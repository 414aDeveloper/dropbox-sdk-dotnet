// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>Errors reported by <see
    /// cref="Dropbox.Api.Files.Routes.FilesRoutes.GetThumbnailAsync" />.</para>
    /// </summary>
    public class ThumbnailError : enc.IEncodable<ThumbnailError>
    {
        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ThumbnailError" /> class.</para>
        /// </summary>
        public ThumbnailError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is DownloadError</para>
        /// </summary>
        public bool IsDownloadError
        {
            get
            {
                return this is DownloadError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a DownloadError, or <c>null</c>.</para>
        /// </summary>
        public DownloadError AsDownloadError
        {
            get
            {
                return this as DownloadError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is ExtensionError</para>
        /// </summary>
        public bool IsExtensionError
        {
            get
            {
                return this is ExtensionError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ExtensionError, or <c>null</c>.</para>
        /// </summary>
        public ExtensionError AsExtensionError
        {
            get
            {
                return this as ExtensionError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is FormatError</para>
        /// </summary>
        public bool IsFormatError
        {
            get
            {
                return this is FormatError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a FormatError, or <c>null</c>.</para>
        /// </summary>
        public FormatError AsFormatError
        {
            get
            {
                return this as FormatError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is SizeError</para>
        /// </summary>
        public bool IsSizeError
        {
            get
            {
                return this is SizeError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SizeError, or <c>null</c>.</para>
        /// </summary>
        public SizeError AsSizeError
        {
            get
            {
                return this as SizeError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is InvalidImage</para>
        /// </summary>
        public bool IsInvalidImage
        {
            get
            {
                return this is InvalidImage;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a InvalidImage, or <c>null</c>.</para>
        /// </summary>
        public InvalidImage AsInvalidImage
        {
            get
            {
                return this as InvalidImage;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is ConversionError</para>
        /// </summary>
        public bool IsConversionError
        {
            get
            {
                return this is ConversionError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ConversionError, or <c>null</c>.</para>
        /// </summary>
        public ConversionError AsConversionError
        {
            get
            {
                return this as ConversionError;
            }
        }

        #region IEncodable<ThumbnailError> methods

        /// <summary>
        /// <para>Encodes the object using the supplied encoder.</para>
        /// </summary>
        /// <param name="encoder">The encoder being used to serialize the object.</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        void enc.IEncodable<ThumbnailError>.Encode(enc.IEncoder encoder)
        {
            if (this.IsDownloadError)
            {
                ((enc.IEncodable<DownloadError>)this).Encode(encoder);
            }
            else if (this.IsExtensionError)
            {
                ((enc.IEncodable<ExtensionError>)this).Encode(encoder);
            }
            else if (this.IsFormatError)
            {
                ((enc.IEncodable<FormatError>)this).Encode(encoder);
            }
            else if (this.IsSizeError)
            {
                ((enc.IEncodable<SizeError>)this).Encode(encoder);
            }
            else if (this.IsInvalidImage)
            {
                ((enc.IEncodable<InvalidImage>)this).Encode(encoder);
            }
            else if (this.IsConversionError)
            {
                ((enc.IEncodable<ConversionError>)this).Encode(encoder);
            }
            else
            {
                throw new sys.InvalidOperationException();
            }
        }

        /// <summary>
        /// <para>Decodes on object using the supplied decoder.</para>
        /// </summary>
        /// <param name="decoder">The decoder used to deserialize the object.</param>
        /// <returns>The deserialized object. Note: this is not necessarily the current
        /// instance.</returns>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        ThumbnailError enc.IEncodable<ThumbnailError>.Decode(enc.IDecoder decoder)
        {
            switch (decoder.GetUnionName())
            {
            case "download_error":
                using (var obj = decoder.GetObject())
                {
                    return new DownloadError(obj.GetFieldObject<Dropbox.Api.Files.DownloadError>("download_error"));
                }
            case "extension_error":
                return ExtensionError.Instance;
            case "format_error":
                return FormatError.Instance;
            case "size_error":
                return SizeError.Instance;
            case "invalid_image":
                return InvalidImage.Instance;
            case "conversion_error":
                return ConversionError.Instance;
            default:
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        /// <summary>
        /// <para>An error occurs when downloading metadata for the image.</para>
        /// </summary>
        public sealed class DownloadError : ThumbnailError, enc.IEncodable<DownloadError>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="DownloadError" />
            /// class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public DownloadError(Dropbox.Api.Files.DownloadError value)
            {
                this.Value = value;
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public Dropbox.Api.Files.DownloadError Value { get; private set; }

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            void enc.IEncodable<DownloadError>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField("download_error", this.Value);
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            DownloadError enc.IEncodable<DownloadError>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>The file extension doesn't allow conversion to a thumbnail.</para>
        /// </summary>
        public sealed class ExtensionError : ThumbnailError, enc.IEncodable<ExtensionError>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ExtensionError" />
            /// class.</para>
            /// </summary>
            private ExtensionError()
            {
            }

            /// <summary>
            /// <para>A singleton instance of ExtensionError</para>
            /// </summary>
            public static readonly ExtensionError Instance = new ExtensionError();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<ExtensionError>.Encode(enc.IEncoder encoder)
            {
                encoder.AddUnion("extension_error");
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            ExtensionError enc.IEncodable<ExtensionError>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>The thumbnail format specified is not supported.</para>
        /// </summary>
        public sealed class FormatError : ThumbnailError, enc.IEncodable<FormatError>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="FormatError" />
            /// class.</para>
            /// </summary>
            private FormatError()
            {
            }

            /// <summary>
            /// <para>A singleton instance of FormatError</para>
            /// </summary>
            public static readonly FormatError Instance = new FormatError();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<FormatError>.Encode(enc.IEncoder encoder)
            {
                encoder.AddUnion("format_error");
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            FormatError enc.IEncodable<FormatError>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>The size value specified is not supported.</para>
        /// </summary>
        public sealed class SizeError : ThumbnailError, enc.IEncodable<SizeError>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SizeError" /> class.</para>
            /// </summary>
            private SizeError()
            {
            }

            /// <summary>
            /// <para>A singleton instance of SizeError</para>
            /// </summary>
            public static readonly SizeError Instance = new SizeError();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<SizeError>.Encode(enc.IEncoder encoder)
            {
                encoder.AddUnion("size_error");
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            SizeError enc.IEncodable<SizeError>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>The image is invalid and cannot be converted to a thumbnail.</para>
        /// </summary>
        public sealed class InvalidImage : ThumbnailError, enc.IEncodable<InvalidImage>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="InvalidImage" />
            /// class.</para>
            /// </summary>
            private InvalidImage()
            {
            }

            /// <summary>
            /// <para>A singleton instance of InvalidImage</para>
            /// </summary>
            public static readonly InvalidImage Instance = new InvalidImage();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<InvalidImage>.Encode(enc.IEncoder encoder)
            {
                encoder.AddUnion("invalid_image");
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            InvalidImage enc.IEncodable<InvalidImage>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>An error occurs during thumbnail conversion.</para>
        /// </summary>
        public sealed class ConversionError : ThumbnailError, enc.IEncodable<ConversionError>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ConversionError" />
            /// class.</para>
            /// </summary>
            private ConversionError()
            {
            }

            /// <summary>
            /// <para>A singleton instance of ConversionError</para>
            /// </summary>
            public static readonly ConversionError Instance = new ConversionError();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<ConversionError>.Encode(enc.IEncoder encoder)
            {
                encoder.AddUnion("conversion_error");
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            ConversionError enc.IEncodable<ConversionError>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }
    }
}
