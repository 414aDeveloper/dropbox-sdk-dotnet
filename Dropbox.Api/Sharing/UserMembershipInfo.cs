// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>The information about a user member of the shared folder.</para>
    /// </summary>
    /// <seealso cref="MembershipInfo" />
    public sealed class UserMembershipInfo : enc.IEncodable<UserMembershipInfo>
    {
        /// <summary>
        /// <para>Initializes a new instance of the <see cref="UserMembershipInfo" />
        /// class.</para>
        /// </summary>
        /// <param name="accessType">This access type for this user member.</param>
        /// <param name="user">The account information for the membership user.</param>
        /// <param name="active">If this membership is active. When the field is false, it
        /// means the user has left the shared folder (but may still rejoin).</param>
        public UserMembershipInfo(AccessType accessType,
                                  UserInfo user,
                                  bool active)
        {
            if (accessType == null)
            {
                throw new sys.ArgumentNullException("accessType");
            }

            if (user == null)
            {
                throw new sys.ArgumentNullException("user");
            }

            this.AccessType = accessType;
            this.User = user;
            this.Active = active;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="UserMembershipInfo" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public UserMembershipInfo()
        {
        }

        /// <summary>
        /// <para>This access type for this user member.</para>
        /// </summary>
        public AccessType AccessType { get; private set; }

        /// <summary>
        /// <para>The account information for the membership user.</para>
        /// </summary>
        public UserInfo User { get; private set; }

        /// <summary>
        /// <para>If this membership is active. When the field is false, it means the user has
        /// left the shared folder (but may still rejoin).</para>
        /// </summary>
        public bool Active { get; private set; }

        #region IEncodable<UserMembershipInfo> methods

        /// <summary>
        /// <para>Encodes the object using the supplied encoder.</para>
        /// </summary>
        /// <param name="encoder">The encoder being used to serialize the object.</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        void enc.IEncodable<UserMembershipInfo>.Encode(enc.IEncoder encoder)
        {
            using (var obj = encoder.AddObject())
            {
                obj.AddFieldObject<AccessType>("access_type", this.AccessType);
                obj.AddFieldObject<UserInfo>("user", this.User);
                obj.AddField<bool>("active", this.Active);
            }
        }

        /// <summary>
        /// <para>Decodes on object using the supplied decoder.</para>
        /// </summary>
        /// <param name="decoder">The decoder used to deserialize the object.</param>
        /// <returns>The deserialized object. Note: this is not necessarily the current
        /// instance.</returns>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        UserMembershipInfo enc.IEncodable<UserMembershipInfo>.Decode(enc.IDecoder decoder)
        {
            using (var obj = decoder.GetObject())
            {
                this.AccessType = obj.GetFieldObject<AccessType>("access_type");
                this.User = obj.GetFieldObject<UserInfo>("user");
                this.Active = obj.GetField<bool>("active");
            }

            return this;
        }

        #endregion
    }
}
