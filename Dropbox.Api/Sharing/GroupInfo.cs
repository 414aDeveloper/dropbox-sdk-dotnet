// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Sharing
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>The information about a group. Group is a way to manage a list of users  who need
    /// same access permission to the shared folder.</para>
    /// </summary>
    /// <seealso cref="GroupMembershipInfo" />
    public sealed class GroupInfo : enc.IEncodable<GroupInfo>
    {
        /// <summary>
        /// <para>Initializes a new instance of the <see cref="GroupInfo" /> class.</para>
        /// </summary>
        /// <param name="displayName">The display name of the group.</param>
        /// <param name="id">The ID of the group.</param>
        /// <param name="memberCount">The total number of member for this group.</param>
        /// <param name="sameTeam">If all members of the group are in the same team as current
        /// user.</param>
        public GroupInfo(string displayName,
                         string id,
                         long memberCount,
                         bool sameTeam)
        {
            if (displayName == null)
            {
                throw new sys.ArgumentNullException("displayName");
            }

            if (id == null)
            {
                throw new sys.ArgumentNullException("id");
            }

            this.DisplayName = displayName;
            this.Id = id;
            this.MemberCount = memberCount;
            this.SameTeam = sameTeam;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="GroupInfo" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        public GroupInfo()
        {
        }

        /// <summary>
        /// <para>The display name of the group.</para>
        /// </summary>
        public string DisplayName { get; private set; }

        /// <summary>
        /// <para>The ID of the group.</para>
        /// </summary>
        public string Id { get; private set; }

        /// <summary>
        /// <para>The total number of member for this group.</para>
        /// </summary>
        public long MemberCount { get; private set; }

        /// <summary>
        /// <para>If all members of the group are in the same team as current user.</para>
        /// </summary>
        public bool SameTeam { get; private set; }

        #region IEncodable<GroupInfo> methods

        /// <summary>
        /// <para>Encodes the object using the supplied encoder.</para>
        /// </summary>
        /// <param name="encoder">The encoder being used to serialize the object.</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        void enc.IEncodable<GroupInfo>.Encode(enc.IEncoder encoder)
        {
            using (var obj = encoder.AddObject())
            {
                obj.AddField<string>("display_name", this.DisplayName);
                obj.AddField<string>("id", this.Id);
                obj.AddField<long>("member_count", this.MemberCount);
                obj.AddField<bool>("same_team", this.SameTeam);
            }
        }

        /// <summary>
        /// <para>Decodes on object using the supplied decoder.</para>
        /// </summary>
        /// <param name="decoder">The decoder used to deserialize the object.</param>
        /// <returns>The deserialized object. Note: this is not necessarily the current
        /// instance.</returns>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        GroupInfo enc.IEncodable<GroupInfo>.Decode(enc.IDecoder decoder)
        {
            using (var obj = decoder.GetObject())
            {
                this.DisplayName = obj.GetField<string>("display_name");
                this.Id = obj.GetField<string>("id");
                this.MemberCount = obj.GetField<long>("member_count");
                this.SameTeam = obj.GetField<bool>("same_team");
            }

            return this;
        }

        #endregion
    }
}
