// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>The metadata object</para>
    /// </summary>
    /// <seealso cref="FileMetadata" />
    /// <seealso cref="FolderMetadata" />
    /// <seealso cref="MetadataWithName" />
    /// <seealso cref="MetadataWithPath" />
    public class Metadata : enc.IEncodable<Metadata>
    {
        /// <summary>
        /// <para>Initializes a new instance of the <see cref="Metadata" /> class.</para>
        /// </summary>
        public Metadata()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is File</para>
        /// </summary>
        public bool IsFile
        {
            get
            {
                return this is FileMetadata;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a <see cref="FileMetadata" />, or <c>null</c>.</para>
        /// </summary>
        public FileMetadata AsFile
        {
            get
            {
                return this as FileMetadata;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Folder</para>
        /// </summary>
        public bool IsFolder
        {
            get
            {
                return this is FolderMetadata;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a <see cref="FolderMetadata" />, or <c>null</c>.</para>
        /// </summary>
        public FolderMetadata AsFolder
        {
            get
            {
                return this as FolderMetadata;
            }
        }

        #region IEncodable<Metadata> methods

        /// <summary>
        /// <para>Encodes the object using the supplied encoder.</para>
        /// </summary>
        /// <param name="encoder">The encoder being used to serialize the object.</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        void enc.IEncodable<Metadata>.Encode(enc.IEncoder encoder)
        {
            using (var obj = encoder.AddObject())
            {
                if (this.IsFile)
                {
                    obj.AddFieldObject<FileMetadata>("file", this.AsFile);
                }
                else if (this.IsFolder)
                {
                    obj.AddFieldObject<FolderMetadata>("folder", this.AsFolder);
                }
                else
                {
                    throw new sys.InvalidOperationException();
                }

            }
        }

        /// <summary>
        /// <para>Decodes on object using the supplied decoder.</para>
        /// </summary>
        /// <param name="decoder">The decoder used to deserialize the object.</param>
        /// <returns>The deserialized object. Note: this is not necessarily the current
        /// instance.</returns>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        Metadata enc.IEncodable<Metadata>.Decode(enc.IDecoder decoder)
        {
            using (var obj = decoder.GetObject())
            {
                Metadata target;

                if (obj.HasField("file"))
                {
                    target = obj.GetFieldObject<FileMetadata>("file");
                }
                else if (obj.HasField("folder"))
                {
                    target = obj.GetFieldObject<FolderMetadata>("folder");
                }
                else
                {
                    throw new sys.InvalidOperationException();
                }


                return target;
            }
        }

        #endregion
    }
}
