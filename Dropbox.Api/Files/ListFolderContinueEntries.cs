// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>The list folder continue entries object</para>
    /// </summary>
    public class ListFolderContinueEntries : enc.IEncodable<ListFolderContinueEntries>
    {
        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ListFolderContinueEntries" />
        /// class.</para>
        /// </summary>
        public ListFolderContinueEntries()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Continue</para>
        /// </summary>
        public bool IsContinue
        {
            get
            {
                return this is Continue;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Continue, or <c>null</c>.</para>
        /// </summary>
        public Continue AsContinue
        {
            get
            {
                return this as Continue;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Restart</para>
        /// </summary>
        public bool IsRestart
        {
            get
            {
                return this is Restart;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Restart, or <c>null</c>.</para>
        /// </summary>
        public Restart AsRestart
        {
            get
            {
                return this as Restart;
            }
        }

        #region IEncodable<ListFolderContinueEntries> methods

        /// <summary>
        /// <para>Encodes the object using the supplied encoder.</para>
        /// </summary>
        /// <param name="encoder">The encoder being used to serialize the object.</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        void enc.IEncodable<ListFolderContinueEntries>.Encode(enc.IEncoder encoder)
        {
            if (this.IsContinue)
            {
                ((enc.IEncodable<Continue>)this).Encode(encoder);
            }
            else if (this.IsRestart)
            {
                ((enc.IEncodable<Restart>)this).Encode(encoder);
            }
            else
            {
                throw new sys.InvalidOperationException();
            }
        }

        /// <summary>
        /// <para>Decodes on object using the supplied decoder.</para>
        /// </summary>
        /// <param name="decoder">The decoder used to deserialize the object.</param>
        /// <returns>The deserialized object. Note: this is not necessarily the current
        /// instance.</returns>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        ListFolderContinueEntries enc.IEncodable<ListFolderContinueEntries>.Decode(enc.IDecoder decoder)
        {
            switch (decoder.GetUnionName())
            {
            case "continue":
                using (var obj = decoder.GetObject())
                {
                    return new Continue(new col.List<ChangeEntry>(obj.GetFieldObjectList<ChangeEntry>("continue")));
                }
            case "restart":
                using (var obj = decoder.GetObject())
                {
                    return new Restart(new col.List<ChangeEntry>(obj.GetFieldObjectList<ChangeEntry>("restart")));
                }
            default:
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        /// <summary>
        /// <para>The continue object</para>
        /// </summary>
        public sealed class Continue : ListFolderContinueEntries, enc.IEncodable<Continue>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Continue" /> class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public Continue(col.IEnumerable<ChangeEntry> value)
            {
                this.Value = new col.List<ChangeEntry>(value);
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public col.IList<ChangeEntry> Value { get; private set; }

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            void enc.IEncodable<Continue>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField("continue", this.Value);
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            Continue enc.IEncodable<Continue>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>The restart object</para>
        /// </summary>
        public sealed class Restart : ListFolderContinueEntries, enc.IEncodable<Restart>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Restart" /> class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public Restart(col.IEnumerable<ChangeEntry> value)
            {
                this.Value = new col.List<ChangeEntry>(value);
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public col.IList<ChangeEntry> Value { get; private set; }

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            void enc.IEncodable<Restart>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField("restart", this.Value);
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            Restart enc.IEncodable<Restart>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }
    }
}
