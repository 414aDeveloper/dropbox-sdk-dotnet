// <auto-generated>
// Auto-generated by BabelAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Babel;

    /// <summary>
    /// <para>The size option for thumbnail image.</para>
    /// </summary>
    public class ThumbnailSize : enc.IEncodable<ThumbnailSize>
    {
        /// <summary>
        /// <para>Initializes a new instance of the <see cref="ThumbnailSize" /> class.</para>
        /// </summary>
        public ThumbnailSize()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Xs</para>
        /// </summary>
        public bool IsXs
        {
            get
            {
                return this is Xs;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Xs, or <c>null</c>.</para>
        /// </summary>
        public Xs AsXs
        {
            get
            {
                return this as Xs;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is S</para>
        /// </summary>
        public bool IsS
        {
            get
            {
                return this is S;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a S, or <c>null</c>.</para>
        /// </summary>
        public S AsS
        {
            get
            {
                return this as S;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is M</para>
        /// </summary>
        public bool IsM
        {
            get
            {
                return this is M;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a M, or <c>null</c>.</para>
        /// </summary>
        public M AsM
        {
            get
            {
                return this as M;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is L</para>
        /// </summary>
        public bool IsL
        {
            get
            {
                return this is L;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a L, or <c>null</c>.</para>
        /// </summary>
        public L AsL
        {
            get
            {
                return this as L;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Xl</para>
        /// </summary>
        public bool IsXl
        {
            get
            {
                return this is Xl;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Xl, or <c>null</c>.</para>
        /// </summary>
        public Xl AsXl
        {
            get
            {
                return this as Xl;
            }
        }

        #region IEncodable<ThumbnailSize> methods

        /// <summary>
        /// <para>Encodes the object using the supplied encoder.</para>
        /// </summary>
        /// <param name="encoder">The encoder being used to serialize the object.</param>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        void enc.IEncodable<ThumbnailSize>.Encode(enc.IEncoder encoder)
        {
            if (this.IsXs)
            {
                ((enc.IEncodable<Xs>)this).Encode(encoder);
            }
            else if (this.IsS)
            {
                ((enc.IEncodable<S>)this).Encode(encoder);
            }
            else if (this.IsM)
            {
                ((enc.IEncodable<M>)this).Encode(encoder);
            }
            else if (this.IsL)
            {
                ((enc.IEncodable<L>)this).Encode(encoder);
            }
            else if (this.IsXl)
            {
                ((enc.IEncodable<Xl>)this).Encode(encoder);
            }
            else
            {
                throw new sys.InvalidOperationException();
            }
        }

        /// <summary>
        /// <para>Decodes on object using the supplied decoder.</para>
        /// </summary>
        /// <param name="decoder">The decoder used to deserialize the object.</param>
        /// <returns>The deserialized object. Note: this is not necessarily the current
        /// instance.</returns>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
        ThumbnailSize enc.IEncodable<ThumbnailSize>.Decode(enc.IDecoder decoder)
        {
            switch (decoder.GetUnionName())
            {
            case "xs":
                return Xs.Instance;
            case "s":
                return S.Instance;
            case "m":
                return M.Instance;
            case "l":
                return L.Instance;
            case "xl":
                return Xl.Instance;
            default:
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        /// <summary>
        /// <para>32 by 32 px.</para>
        /// </summary>
        public sealed class Xs : ThumbnailSize, enc.IEncodable<Xs>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Xs" /> class.</para>
            /// </summary>
            private Xs()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Xs</para>
            /// </summary>
            public static readonly Xs Instance = new Xs();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<Xs>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField(".tag", "xs");
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            Xs enc.IEncodable<Xs>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>64 by 64 px.</para>
        /// </summary>
        public sealed class S : ThumbnailSize, enc.IEncodable<S>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="S" /> class.</para>
            /// </summary>
            private S()
            {
            }

            /// <summary>
            /// <para>A singleton instance of S</para>
            /// </summary>
            public static readonly S Instance = new S();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<S>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField(".tag", "s");
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            S enc.IEncodable<S>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>128 by 128 px.</para>
        /// </summary>
        public sealed class M : ThumbnailSize, enc.IEncodable<M>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="M" /> class.</para>
            /// </summary>
            private M()
            {
            }

            /// <summary>
            /// <para>A singleton instance of M</para>
            /// </summary>
            public static readonly M Instance = new M();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<M>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField(".tag", "m");
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            M enc.IEncodable<M>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>640 by 480 px.</para>
        /// </summary>
        public sealed class L : ThumbnailSize, enc.IEncodable<L>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="L" /> class.</para>
            /// </summary>
            private L()
            {
            }

            /// <summary>
            /// <para>A singleton instance of L</para>
            /// </summary>
            public static readonly L Instance = new L();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<L>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField(".tag", "l");
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            L enc.IEncodable<L>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }

        /// <summary>
        /// <para>1024 by 768</para>
        /// </summary>
        public sealed class Xl : ThumbnailSize, enc.IEncodable<Xl>
        {
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Xl" /> class.</para>
            /// </summary>
            private Xl()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Xl</para>
            /// </summary>
            public static readonly Xl Instance = new Xl();

            /// <summary>
            /// <para>Encodes the object using the supplied encoder.</para>
            /// </summary>
            /// <param name="encoder">The encoder being used to serialize the object.</param>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            void enc.IEncodable<Xl>.Encode(enc.IEncoder encoder)
            {
                using (var obj = encoder.AddObject())
                {
                    obj.AddField(".tag", "xl");
                }
            }

            /// <summary>
            /// <para>Decodes on object using the supplied decoder.</para>
            /// </summary>
            /// <param name="decoder">The decoder used to deserialize the object.</param>
            /// <returns>The deserialized object. Note: this is not necessarily the current
            /// instance.</returns>
            [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1033:InterfaceMethodsShouldBeCallableByChildTypes")]
            Xl enc.IEncodable<Xl>.Decode(enc.IDecoder decoder)
            {
                throw new sys.InvalidOperationException("Decoding happens through the base class");
            }
        }
    }
}
